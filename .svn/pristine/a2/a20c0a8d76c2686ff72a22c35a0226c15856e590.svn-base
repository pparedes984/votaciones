/*
 * File: app/view/vwprtPrincipalViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('voto.view.vwprtPrincipalViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.vwprtprincipal',

    cargarCandidatos: function() {
        var indice = Ext.getCmp('dpIndice').getValue();
        var panelMenu = Ext.create('Ext.panel.Panel', {
            id:'pnlMenu',
            titleAlign: 'center',
            margin: '10 10 10 10',
            autoScroll: true,
            layout : {
                type  : 'column'
            },
            renderTo: Ext.getBody()
        });
        Ext.getCmp('pnlVotos').add(panelMenu);
        Ext.Ajax.request({
            url: '../servidor/voto/Candidato/getTipo',
            method:"post",
            params:{
                tipo: TIPOS.data[indice-1].id,
            },
            success: function( result, request ) {
                var responseData = Ext.JSON.decode(result.responseText);

                for(i=0;i<responseData.data.length;i++){
                    var panel = Ext.create('Ext.panel.Panel', {
                        title: responseData.data[i].nombre,
                        titleAlign: 'center',
                        columnWidth: 1/5,
                        margin: '10 10 10 10',
                        layout : {
                            type  : 'vbox',
                            pack  : 'center',
                            align : 'middle'
                        },
                        items: [
                            {
                                xtype: 'panel',
                                layout: 'fit',
                                height: 150,
                                width: 150,
                                margin: '10 0 0 0',
                                html: '<div style="display: flex; justify-content: center;"><img src="'+responseData.data[i].foto+'" height="140"></div>',
                            },
                            {
                                xtype: 'fieldcontainer',
                                defaultType: 'checkboxfield',
                                items: [
                                    {
                                        boxLabel  : 'Votar',
                                        name      : 'voto',
                                        //checked   : valchb,
                                        id        : 'ch'+responseData.data[i].id,
                                        inputValue: '1',
                                        listeners: { change:function (me,newValue, oldValue, eOpts ){

                                            if(newValue === true){
                                                Ext.getCmp('chBlanco').setValue(false);
                                                Ext.getCmp('chNulo').setValue(false);
                                                var cont=0;
                                                for(var i=0;i<responseData.data.length;i++){

                                                    if(Ext.getCmp('ch'+responseData.data[i].id).getValue() === true)
                                                        cont++;

                                                    if(cont >= TIPOS.data[indice-1].votos){
                                                        for(var j=0;j<responseData.data.length;j++){
                                                            if(Ext.getCmp('ch'+responseData.data[j].id).getValue() !== true){
                                                                Ext.getCmp('ch'+responseData.data[j].id).setDisabled(true);
                                                            }
                                                        }
                                                        break;
                                                    }
                                                }
                                            }
                                            else{
                                                for(var j=0;j<responseData.data.length;j++){
                                                    Ext.getCmp('ch'+responseData.data[j].id).setDisabled(false);
                                                }
                                            }
                                        }
                                                   }
                                    }
                                ]
                            }
                        ],
                        renderTo: Ext.getBody()
                    });
                    Ext.getCmp('pnlMenu').add(panel);
                }
                Ext.getCmp('btnSiguiente').setDisabled(false);
                if(indice === 2)
                {
                    Ext.getCmp('btnRegresar').setDisabled(false);
                }

                if(indice === 1)
                {
                    Ext.getCmp('btnRegresar').setDisabled(true);
                }
                else{
                    Ext.getCmp('btnRegresar').setDisabled(false);

                }
                for(var j=0;j<VOTOS[indice-1].length;j++){
                    if(VOTOS[indice-1][j] === 'BLANCO'){
                        Ext.getCmp('chBlanco').setValue(true);
                        break;
                    }
                    else if(VOTOS[indice-1][j] === 'NULO'){
                        Ext.getCmp('chNulo').setValue(true);
                        break;
                    }
                    else
                        Ext.getCmp('ch'+VOTOS[indice-1][j]).setValue(true);
                }
            },
            failure: function(response, opts) {
                console.log('server-side failure with status code ' + response.status);
            }
        });
    },

    onChBlancoChange: function(field, newValue, oldValue, eOpts) {
        if(Ext.getCmp('chBlanco').getValue()=== true){
            var indice = Ext.getCmp('dpIndice').getValue();
            Ext.getCmp('chNulo').setValue(false);
            Ext.Ajax.request({
                url: '../servidor/voto/Candidato/getTipo',
                method:"post",
                params:{
                    tipo: TIPOS.data[indice-1].id,
                },
                success: function( result, request ) {
                    var responseData = Ext.JSON.decode(result.responseText);
                    for(var i=0;i<responseData.data.length;i++){
                        if(Ext.getCmp('ch'+responseData.data[i].id) !== undefined)
                        Ext.getCmp('ch'+responseData.data[i].id).setValue(false);
                    }
                },
                failure: function(response, opts) {
                    console.log('server-side failure with status code ' + response.status);
                }
            });
        }
    },

    onChNuloChange: function(field, newValue, oldValue, eOpts) {
        if(Ext.getCmp('chNulo').getValue()=== true){
            var indice = Ext.getCmp('dpIndice').getValue();
            Ext.getCmp('chBlanco').setValue(false);
            Ext.Ajax.request({
                url: '../servidor/voto/Candidato/getTipo',
                method:"post",
                params:{
                    tipo: TIPOS.data[indice-1].id,
                },
                success: function( result, request ) {
                    var responseData = Ext.JSON.decode(result.responseText);
                    for(var i=0;i<responseData.data.length;i++){
                        if(Ext.getCmp('ch'+responseData.data[i].id) !== undefined)
                        Ext.getCmp('ch'+responseData.data[i].id).setValue(false);
                    }
                },
                failure: function(response, opts) {
                    console.log('server-side failure with status code ' + response.status);
                }
            });
        }
    },

    onBtnRegresarClick: function(button, e, eOpts) {
        var me = this;
        var indice = Ext.getCmp('dpIndice').getValue();
        if(indice>1){
            Ext.getCmp('chBlanco').setValue(false);
            Ext.getCmp('chNulo').setValue(false);

            Ext.getCmp('btnRegresar').setDisabled(true);
            Ext.getCmp('btnSiguiente').setDisabled(true);
            Ext.getCmp('pnlVotos').removeAll();
            indice--;
            Ext.getCmp('dpIndice').setValue(indice);
            Ext.getCmp('pnlPrincipal').setTitle(TIPOS.data[indice-1].descripcion);
            me.cargarCandidatos();
            Ext.getCmp('btnRegresar').focus(true);
        }
    },

    onBtnSiguienteClick: function(button, e, eOpts) {
        var me = this;
        var indice = Ext.getCmp('dpIndice').getValue();
        Ext.Ajax.request({
            url: '../servidor/voto/Candidato/getTipo',
            method:"post",
            params:{
                tipo: TIPOS.data[indice-1].id,
            },
            success: function( result, request ) {
                var responseData = Ext.JSON.decode(result.responseText);
                var aux = 0;
                if(Ext.getCmp('chBlanco').getValue() === true)
                {
                    VOTOS[indice-1].push('BLANCO');
                    aux++;
                }
                if(Ext.getCmp('chNulo').getValue() === true)
                {
                    VOTOS[indice-1].push('NULO');
                    aux++;
                }
                for(var i=0;i<responseData.data.length;i++){
                    if(Ext.getCmp('ch'+responseData.data[i].id).getValue() === true){
                        aux++;
                    }
                }
                if(aux > 0){
                    for(var i=0;i<responseData.data.length;i++){
                        if(Ext.getCmp('ch'+responseData.data[i].id).getValue() === true){
                            VOTOS[indice-1].push(responseData.data[i].id);
                        }
                    }
                    if(indice<TIPOS.data.length){
                        Ext.getCmp('chBlanco').setValue(false);
                        Ext.getCmp('chNulo').setValue(false);

                        Ext.getCmp('btnRegresar').setDisabled(true);
                        Ext.getCmp('btnSiguiente').setDisabled(true);
                        Ext.getCmp('pnlVotos').removeAll();
                        indice++;
                        Ext.getCmp('dpIndice').setValue(indice);
                        Ext.getCmp('pnlPrincipal').setTitle(TIPOS.data[indice-1].descripcion);
                        me.cargarCandidatos();
                        Ext.getCmp('btnSiguiente').focus(true);
                    }
                    else{
                        var mensaje = "La votación está a punto de finalizar.<br/>"+
                        "Usted ha votado por los siguientes candidatos<br/><br/>";
                        mensaje = mensaje.concat("<br/>¿Está seguro que desea continuar?");
                        Ext.Msg.show({
                            title: 'Atención',
                            msg: mensaje,
                            iconCls:'x-fa fa-info',
                            buttonText: {
                                yes: 'Si',
                                no: 'No'
                            },
                            buttons: Ext.Msg.YESNO,
                            fn: function (btn) {
                            }
                        });
                        console.log(VOTOS);
                    }
                }
                else{
                    Ext.Msg.show({
                        title:'Advertencia',
                        msg: 'Debe elegir una opción.',
                        buttons: Ext.Msg.OK,
                        icon: Ext.MessageBox.WARNING
                    });
                }
            },
            failure: function(response, opts) {
                console.log('server-side failure with status code ' + response.status);
            }
        });
    },

    onPnlVotosRender: function(component, eOpts) {
        var me = this;
        var indice = Ext.getCmp('dpIndice').getValue();
        Ext.getCmp('btnRegresar').setDisabled(true);
        Ext.getCmp('pnlPrincipal').setTitle(TIPOS.data[indice-1].descripcion);
        me.cargarCandidatos();
    },

    onBtnSalirPrincipalClick: function(button, e, eOpts) {
        var viewMain = this;
        viewMain.getView().destroy();
        Ext.create('voto.view.vwprtLoginVotos', {renderTo: Ext.getBody()});
        Ext.getCmp('displayusuario').setText('TRIBUNAL: '+NOMBRE);
    }

});

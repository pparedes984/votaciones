/*
 * File: app/view/pnlVotanteViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('voto.view.pnlVotanteViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.pnlvotante',

    onBtnBuscarClick: function(button, e, eOpts) {
        var store = Ext.getCmp('grdVotante').getStore();
        store.removeAll();
        store.proxy.extraParams = {
            cedula:Ext.getCmp('cedulavotante').getValue(),
            busqueda: 1
        };
        store.load();
        Ext.getCmp('cedulavotante').setValue('');
    },

    onBtnEnviarClick: function(button, e, eOpts) {
        var me = this;
        var grid = me.getView().down('#grdVotante');
        var arrayKeys = grid.getSelectionModel().selected.items;

        if(arrayKeys.length === 0)
        Ext.Msg.alert('Error', 'Debe escoger un registro');
        else if(arrayKeys.length >1 )
        Ext.Msg.alert('Error', 'Solo debe escoger un registro');
        else
        {
            if(arrayKeys[0].data.clave === ''){
                Ext.Msg.alert('Error', 'La clave no ha sido generada');

            }
            else{

                Ext.Ajax.request({
                    url: '../servidor/voto/votante/enviar',
                    method:"post",
                    success: function( result, request ) {
                        Ext.Msg.alert('Correos enviados','Se han enviado lo correos, verificar si no existen correos pendientes');
                        Ext.Ajax.request({
                            url: '../servidor/voto/votante/correoestu',
                            method:"post",
                            params: {
                                cedula: arrayKeys[0].data.cedula,
                                email: arrayKeys[0].data.email,
                                clave: arrayKeys[0].data.clave,


                            },
                            success: function( result, request ) {
                                Ext.Msg.alert('Alerta', 'La clave se ha enviado satisfactoriamente');


                            },

                            failure: function(response, opts) {
                                console.log('server-side failure with status code ' + response.status);
                            }
                        });

                    },

                    failure: function(response, opts) {
                        console.log('server-side failure with status code ' + response.status);
                    }
                });
            }

        }
    },

    onRowEditingEdit: function(editor, context, eOpts) {
        var me = this;
        var store = Ext.getCmp('grdVotante').getStore();
        var g = Ext.getCmp('grdVotante');
        var reco = g.selection;
        var id = reco.data.id;
        var arrayKeys = g.getSelectionModel().selected.items;

        if (context.record.modified)
        {
            var reco = context.record;
            store.add(reco);
            store.sync(
            {
                params:{
                    cedula: reco.data.cedula,

                    data: arrayKeys[0]


                },
                success: function(batch, success)
                {
                    store.commitChanges();
                    Ext.Msg.alert('Datos Guardados', 'Los datos se han guardado con Ã©xito');
                    store.load();
                },

                failure: function(batch, success)
                {
                    Ext.Msg.alert('Error', 'Hubor un error');
                }
            });
        }
    }

});

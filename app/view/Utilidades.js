/*
 * File: app/view/Utilidades.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('voto.view.Utilidades', {
    extend: 'Ext.Base',

    statics: {
        verPDF: function() {
            var panel = Ext.create('Ext.form.Panel', {
                title    : 'Ver PDF',
                floating : true,
                alwaysOnTop : true,
                border      : true,
                modal       : true,
                closable    : true,
                resizable   : true,
                draggable   : true,
                maximizable : true,
                minimizable : true,
                maxWidth    : Ext.getBody().getViewSize().width,
                maxHeight   : Ext.getBody().getViewSize().height,
                width       : 800,
                height      : 650,
                style       : { borderColor: 'black',
                    borderStyle: 'solid',
                borderWidth: '2px' },
                items: {

                    xtype  : 'component',
                    autoEl : {
                        tag   : 'iframe',
                        style : 'height: 100%; width: 100%; border: none',
                        src   :  pathPDF
                    }
                },
                renderTo: Ext.getBody()
            });
        },

        loadPDF: function(idPDF, PDFpath, myCallBack) {
            var form = Ext.create('Ext.form.Panel', {
                title      : "Carga de evidencias",
                id         : 'frmUploadPDF',
                fileUpload : true,
                floating   : true,
                alwaysOnTop : true,
                draggable : true,
                closable   : true,
                width      : 600,
                layout     : 'hbox',
                flex       : 1,
                items : [{xtype: 'filefield',
                    width      : 500,
                    padding    : 20,
                    name       : "userfile",
                    allowBlank : false,
                    buttonText : '<i class="fa fa-picture-o" aria-hidden="true"></i>  Seleccione un archivo JPG',
                    listeners:{
                        afterrender:function(cmp){
                            cmp.fileInputEl.set({
                                accept:'image/*'
                            });
                        },
                        regex: /^.*\.(jpg|JPG)$/,
                        regexText: 'Solo se permiten archivos JPG'

                    }
                },

                ],

                buttons:[{
                    text: 'Subir archivo JPG',
                    handler: function() {
                        var form = this.up('form').getForm();
                        if (form.isValid()) {
                            form.submit({
                                url: '../servidor/carga/cargar_evidencia',
                                params : {'new_name' : idPDF, 'new_dir': PDFpath},
                                method : 'POST',
                                headers : 'multipart/form-data',
                                waitMsg: 'Cargando evidencias',
                                success: function(fp, o) {
                                    Ext.Msg.alert({title: 'Carga de evidencias',
                                        msg:'<b>Evidencia se cargó<br>con exito</b>',
                                        buttons: Ext.Msg.OK,
                                    icon: Ext.Msg.INFO});

                                    if (myCallBack)
                                    Ext.callback(myCallBack);
                                    else if(ventana === 0)
                                    {

                                        Ext.getCmp('id_panel_foto').setHtml(URL);
                                    }
                                    else if(ventana === 1)
                                    {

                                        Ext.getCmp('id_panel_foto1').setHtml(URL);
                                    }

                                    ventana = 3;
                                    Ext.getCmp('frmUploadPDF').close();

                                },
                                failure: function(fp, action) {
                                    var loadError = Ext.decode(action.response.responseText);
                                    if (loadError.success === false)
                                    Ext.Msg.show({title: 'Error',
                                        msg: loadError.error.error + loadError.path,
                                        buttons: Ext.Msg.OK,
                                        icon: Ext.Msg.ERROR
                                    });
                                }
                            });
                        }

                    }

                }],
                renderTo : Ext.getBody()
            });
        },

        loadArchivo: function(idPDF, PDFpath, myCallBack) {
            var form = Ext.create('Ext.form.Panel', {
                title      : "Carga de evidencias",
                id         : 'frmUploadArchivo',
                fileUpload : true,
                floating   : true,
                alwaysOnTop : true,
                draggable : true,
                closable   : true,
                width      : 600,
                layout     : 'hbox',
                flex       : 1,
                items : [{xtype: 'filefield',
                    width      : 500,
                    padding    : 20,
                    name       : "userfile",
                    allowBlank : false,
                    buttonText : '<i class="fa fa-picture-o" aria-hidden="true"></i>  Seleccione un archivo CSV',
                    listeners:{
                        afterrender:function(cmp){

                        },
                        regex: /^.*\.(csv|CSV)$/,
                        regexText: 'Solo se permiten archivos CSV'

                    }
                },

                ],

                buttons:[{
                    text: 'Subir archivo CSV',
                    handler: function() {
                        var form = this.up('form').getForm();
                        if (form.isValid()) {
                            form.submit({
                                url: '../servidor/voto/carga/cargarExcel',
                                params : {'new_name' : idPDF, 'new_dir': PDFpath},
                                method : 'POST',
                                headers : 'multipart/form-data',
                                waitMsg: 'Cargando evidencias',
                                success: function(fp, o) {
                                    Ext.Msg.alert({title: 'Carga de evidencias',
                                        msg:'<b>Evidencia se cargó<br>con exito</b>',
                                        buttons: Ext.Msg.OK,
                                    icon: Ext.Msg.INFO});

                                    if (myCallBack)
                                    Ext.callback(myCallBack);
                                    else
                                    {

                                        Ext.Ajax.request({
                                            url: '../servidor/voto/votante/loadExcel',
                                            method:"post",
                                            params: {
                                                nombre: x
                                            },
                                            success: function( result, request ) {

                                            },
                                            failure: function(response, opts) {
                                                console.log('server-side failure with status code ' + response.status);
                                            }
                                        });
                                    }

                                    Ext.getCmp('frmUploadArchivo').close();

                                },
                                failure: function(fp, action) {
                                    var loadError = Ext.decode(action.response.responseText);
                                    if (loadError.success === false)
                                    Ext.Msg.show({title: 'Error',
                                        msg: loadError.error.error + loadError.path,
                                        buttons: Ext.Msg.OK,
                                        icon: Ext.Msg.ERROR
                                    });
                                }
                            });
                        }

                    }

                }],
                renderTo : Ext.getBody()
            });
        },

        setViewLink: function(linkStr, campo) {
            if (linkStr) {
                campo.html = '<a href=' + '"https://apps.puce.edu.ec/documentos/SAP/"' + linkStr + '">Ver evidencia</a>';
            }
        }
    }
});